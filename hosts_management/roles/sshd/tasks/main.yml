---
- name: first remove the host from our known hosts list as we might have re-spun the hosts
  local_action: known_hosts name={{ansible_host}} state=absent
  tags:
    - sshd.known_hosts.key.remove

- name: retrieve public host key for the host
  local_action: command ssh-keyscan -t ecdsa -H {{ansible_host}}
  register: new_host_key
  tags:
    - sshd.known_hosts.key.retrieve

- name: add the new host key for the host to our known hosts list
  local_action: known_hosts name={{ansible_host}} key={{new_host_key.stdout}} state=present
  tags:
    - sshd.known_hosts.key.add

- name: test default ssh port
  local_action: wait_for port=22 timeout=5 host={{ansible_host}}
  register: default_ssh
  ignore_errors: true

- name: set ansible_port to default
  set_fact: ansible_port=22
  when: default_ssh.elapsed < 5

- name: test ssh on high port
  local_action: wait_for port={{custom_ssh_port}} timeout=5 host={{ansible_host}}
  register: high_ssh
  ignore_errors: true

- name: set ansible_port high
  set_fact: ansible_port={{custom_ssh_port}}
  when: default_ssh.elapsed >= 5 and high_ssh.elapsed < 5

- name: Change the port in SSHd Config only if default port still configured
  lineinfile: dest=/etc/ssh/sshd_config regexp="^Port 22" line="Port {{custom_ssh_port}}" state=present
  when: default_ssh.elapsed < 5 and high_ssh.elapsed >= 5
  notify: restart ssh
  tags:
    - sshd.config.port.change
